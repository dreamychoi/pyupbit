import pyupbit
import time
import datetime
import requests
import math

access = "QwBZYd2sLRFv021QOFxxOTzlQ6nxtOSaxBhw0vUQ"          # 본인 값으로 변경
secret = "VMwvnMEfCSbNEiEY9NEGfRirb97AavKQfXqCp2yg"          # 본인 값으로 변경
myToken = "xoxb-2546074584880-2522457470914-yXtrdJ3XhEwUrrMjqtJOHyiV"  # 슬랙 토큰값

upbit = pyupbit.Upbit(access, secret)


tickers = [
    'KRW-GAS',
    'KRW-SRM',
    'KRW-MTL',
    'KRW-OMG',
    'KRW-BCHA',
    'KRW-STPT',
    'KRW-XTZ',
    'KRW-ATOM',
    'KRW-IOST',
    'KRW-ETH'
    ]

k = 0.003


# tickers = pyupbit.get_tickers(fiat="KRW")


def post_message(token, channel, text):
    response = requests.post("https://slack.com/api/chat.postMessage",
        headers={"Authorization": "Bearer "+token},
        data={"channel": channel,"text": text}
    )
    print(response)



while True :
    try:
        for a in tickers :
            df = pyupbit.get_ohlcv(a, count=1)
            mf = pyupbit.get_ohlcv(a, count=1, interval="minute1")
        
            if (float(mf['close']) - float(mf['open'])) <= float(mf['open']) * k :
                # pass
                print(a + " 감지중(현재가) : " + str(pyupbit.get_current_price(a)) + " (" + str("%.2f" %((float(df['close']) - float(df['open']))/float(df['open']) * 100)) + "%)")
        
            else :
                post_message(myToken,"#upbit", a + " 급등알림(현재가) : " + str(pyupbit.get_current_price(a)) + " (" + str("%.2f" %((float(df['close']) - float(df['open']))/float(df['open']) * 100)) + "%)")
                print(a + " ====== 급등알림 ====== (현재가) : " + str(pyupbit.get_current_price(a)) + " (" + str("%.2f" %((float(df['close']) - float(df['open']))/float(df['open']) * 100)) + "%)")
                # break
            time.sleep(1)
        

    except Exception as e:
        print(e)
        time.sleep(1)
